{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 8,
			"minor" : 6,
			"revision" : 1,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 34.0, 76.0, 1373.0, 743.0 ],
		"bglocked" : 0,
		"openinpresentation" : 0,
		"default_fontsize" : 12.0,
		"default_fontface" : 0,
		"default_fontname" : "Arial",
		"gridonopen" : 1,
		"gridsize" : [ 15.0, 15.0 ],
		"gridsnaponopen" : 1,
		"objectsnaponopen" : 1,
		"statusbarvisible" : 2,
		"toolbarvisible" : 1,
		"lefttoolbarpinned" : 0,
		"toptoolbarpinned" : 0,
		"righttoolbarpinned" : 0,
		"bottomtoolbarpinned" : 0,
		"toolbars_unpinned_last_save" : 0,
		"tallnewobj" : 0,
		"boxanimatetime" : 200,
		"enablehscroll" : 1,
		"enablevscroll" : 1,
		"devicewidth" : 0.0,
		"description" : "",
		"digest" : "",
		"tags" : "",
		"style" : "",
		"subpatcher_template" : "",
		"assistshowspatchername" : 0,
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-23",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 895.0, 419.0, 94.0, 22.0 ],
					"text" : "buffer transients"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-22",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 879.0, 333.0, 111.0, 22.0 ],
					"text" : "buffer restDiameter"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-21",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 879.0, 309.0, 122.0, 22.0 ],
					"text" : "buffer targetDiameter"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-11",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 383.0, 25.0, 28.0, 22.0 ],
					"text" : "in 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-12",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 818.0, 172.0, 109.0, 22.0 ],
					"text" : "buffer constrictions"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 27.0, 653.0, 22.0, 22.0 ],
					"text" : "/ 8"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-10",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1027.0, 463.0, 122.0, 22.0 ],
					"text" : "buffer noseReflection"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-9",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1011.0, 299.0, 158.0, 22.0 ],
					"text" : "buffer noseJunctionOutputR"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-6",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1089.0, 227.0, 77.0, 22.0 ],
					"text" : "buffer noseR"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1011.0, 251.0, 76.0, 22.0 ],
					"text" : "buffer noseA"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-3",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1012.0, 187.0, 50.0, 22.0 ],
					"text" : "buffer A"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-35",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1011.0, 275.0, 156.0, 22.0 ],
					"text" : "buffer noseJunctionOutputL"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-34",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1012.0, 227.0, 75.0, 22.0 ],
					"text" : "buffer noseL"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-32",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 27.0, 686.0, 25.0, 22.0 ],
					"text" : "out"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-31",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1031.0, 364.0, 142.0, 22.0 ],
					"text" : "buffer newReflectionLRN"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-30",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1031.0, 340.0, 115.0, 22.0 ],
					"text" : "buffer reflectionLRN"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-20",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 653.0, 22.0, 117.0, 22.0 ],
					"text" : "buffer noseDiameter"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-19",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1012.0, 92.0, 118.0, 22.0 ],
					"text" : "buffer newReflection"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-18",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1012.0, 68.0, 91.0, 22.0 ],
					"text" : "buffer reflection"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-17",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 535.677940964698792, 22.0, 100.0, 22.0 ],
					"text" : "buffer diameter"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-16",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1012.0, 139.0, 128.0, 22.0 ],
					"text" : "buffer junctionOutputL"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-15",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1063.0, 163.0, 51.0, 22.0 ],
					"text" : "buffer R"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-14",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1012.0, 163.0, 49.0, 22.0 ],
					"text" : "buffer L"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-8",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1012.0, 116.0, 128.0, 22.0 ],
					"text" : "buffer junctionOutputR"
				}

			}
, 			{
				"box" : 				{
					"code" : "//551\r\nglottalOutput = in1;\r\nnoiseModulator = in2;\r\nturbulenceNoise = in3;\r\nn = in4;\r\nnoseLength = in5;\r\nnoseStart = n - noseLength + 1;\r\n\r\nif (noiseModulator == 0) noiseModulator = .25;\r\n\r\nvocalOutput = 0;\r\n\r\nfor (lambda = 0; lambda <= 0.5; lambda += 0.5) {\r\n\t\r\n\t//processTransients()\r\n\t//transients buffer sample indexes are tract diameter indexes\r\n\t//sample values are remaining time (if any) of transient at that index\r\n\t//(current time alive = lifetime - sample value)\r\n\tfor (i = 0; i < n; i+= 1) {\r\n\t\tval = transients.peek(i);\r\n\t\tif (transients.peek(i) > 0) {\r\n\t\t\tamplitude = 0.3 * pow(2, -200 * (0.2 - val));\r\n\t\t\tR.poke(R.peek(i) + amplitude/2, i);\r\n\t\t\tL.poke(L.peek(i) + amplitude/2, i);\r\n\t\t\ttransients.poke(transients.peek(i) - 1.0/(samplerate*2), i);\r\n\t\t}\r\n\t}\r\n\t\r\n\t//addTurbulenceNoise replacement\r\n\t//since there's no UI, get index/diameter of constriction using\r\n\t//locations/heights of \"valleys\" in diameter values\r\n\tfor (i = 1; i < 43; i+= 1) {\r\n\t\td = diameter.peek(i);\r\n\t\tif (d < diameter.peek(i-1) && d < diameter.peek(i+1) && d > 0 &&\r\n\t\t\trestDiameter.peek(i) != targetDiameter.peek(i)) {\r\n\t\t\t\t\r\n\t\t\td += 0.3; \r\n\t\t\t\r\n\t\t\t//\"addTurbulenceNoiseAtIndex()\"\r\n\t\t\t//index = i; diameter = d, intensity = 1 (reevaluate?)\r\n\t\t\t//1119\r\n\t\t\tnoise = 0.66 * turbulenceNoise * noiseModulator;\r\n\t\t\t\r\n\t\t\tthinness0 = clamp(8 * (0.7 - d), 0, 1);\r\n\t\t\topenness = clamp(30 * (d - 0.3), 0, 1);\r\n\t\t\tnoise0 = noise * thinness0 * openness;\r\n\t\t\t\r\n\t\t\tR.poke(R.peek(i+1) + noise0/2, i+1);\r\n\t\t\tL.poke(L.peek(i+1) + noise0/2, i+1);\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t//1000 this.junctionOutputR[0] = this.L[0] * this.glottalReflection + glottalOutput;\r\n\tjunctionOutputR.poke(L.peek(0) * 0.75 + glottalOutput, 0);\r\n\r\n\t//1001 this.junctionOutputL[this.n] = this.R[this.n-1] * this.lipReflection; \r\n\tjunctionOutputL.poke(R.peek(n-1) * -0.85, n);\r\n\r\n\tfor (i = 1; i < n; i += 1) { //1003\r\n\t\r\n\t\t//1005 var r = this.reflection[i] * (1-lambda) + this.newReflection[i]*lambda;\r\n\t\tr = reflection.peek(i) * (1-lambda) + newReflection.peek(i) * lambda;\r\n\t\r\n\t\t//1006 var w = r * (this.R[i-1] + this.L[i]);\r\n\t\tw = r * (R.peek(i-1) + L.peek(i));\r\n\t\r\n\t\t//1007 this.junctionOutputR[i] = this.R[i-1] - w;\r\n\t\tjunctionOutputR.poke(R.peek(i-1) - w, i);\r\n\t\r\n\t\t//1008 this.junctionOutputL[i] = this.L[i] + w;\r\n\t\tjunctionOutputL.poke(L.peek(i) + w, i);\r\n\t}\r\n\r\n\ti = noseStart;\r\n\r\n\t//1013 var r = this.newReflectionLeft * (1-lambda) + this.reflectionLeft*lambda;\r\n\tr = newReflectionLRN.peek(0) * (1-lambda) + reflectionLRN.peek(0) * lambda;\r\n\r\n\t//1014 this.junctionOutputL[i] = r*this.R[i-1]+(1+r)*(this.noseL[0]+this.L[i]);\r\n\tjunctionOutputL.poke(r * R.peek(i-1) + (1+r) * (noseL.peek(0) + L.peek(i)), i);\r\n\r\n\t//1015 r = this.newReflectionRight * (1-lambda) + this.reflectionRight*lambda;\r\n\tr = newReflectionLRN.peek(1) * (1-lambda) + reflectionLRN.peek(1) * lambda;\r\n\r\n\t//1016 this.junctionOutputR[i] = r*this.L[i]+(1+r)*(this.R[i-1]+this.noseL[0]);     \r\n\tjunctionOutputR.poke(r * L.peek(i) + (1+r) * (R.peek(i-1) + noseL.peek(0)), i);\r\n\r\n\t//1017 r = this.newReflectionNose * (1-lambda) + this.reflectionNose*lambda;\r\n\tr = newReflectionLRN.peek(2) * (1-lambda) + reflectionLRN.peek(2) * lambda;\r\n\r\n\t//1018 this.noseJunctionOutputR[0] = r*this.noseL[0]+(1+r)*(this.L[i]+this.R[i-1]);\r\n\tnoseJunctionOutputR.poke(r * noseL.peek(0) + (1+r) * (L.peek(i) + R.peek(i-1)), 0);\r\n\r\n\tfor (i = 0; i < n; i += 1) { //1019\r\n\t\r\n\t\t//1021 this.R[i] = this.junctionOutputR[i]*0.999;\r\n\t\tR.poke(junctionOutputR.peek(i) * 0.999, i);\r\n\t\r\n    \t//1022 this.L[i] = this.junctionOutputL[i+1]*0.999; \r\n\t\tL.poke(junctionOutputL.peek(i+1) * 0.999, i);\r\n\t}\r\n\r\n\r\n\t//1039 this.noseJunctionOutputL[this.noseLength] = this.noseR[this.noseLength-1] * this.lipReflection; \r\n\tnoseJunctionOutputL.poke(noseR.peek(noseLength - 1) * -0.85, noseLength);\r\n\r\n\tfor (i = 1; i < noseLength; i += 1) {\r\n\t\t//1043 var w = this.noseReflection[i] * (this.noseR[i-1] + this.noseL[i]);\r\n\t\tw = noseReflection.peek(i) * (noseR.peek(i-1) + noseL.peek(i));\r\n\t\r\n\t\t//1044 this.noseJunctionOutputR[i] = this.noseR[i-1] - w;\r\n\t\tnoseJunctionOutputR.poke(noseR.peek(i-1) - w, i);\r\n\t\r\n\t\t//1045 this.noseJunctionOutputL[i] = this.noseL[i] + w;\r\n\t\tnoseJunctionOutputL.poke(noseL.peek(i) + w, i);\r\n\t}\r\n\r\n\tfor (i = 0; i < noseLength; i += 1) {\r\n\t\r\n\t\t//1050 this.noseR[i] = this.noseJunctionOutputR[i] * this.fade; \r\n\t\tnoseR.poke(noseJunctionOutputR.peek(i), i);\r\n\t\r\n\t\t//1051 this.noseL[i] = this.noseJunctionOutputL[i+1] * this.fade;   \r\n\t\tnoseL.poke(noseJunctionOutputL.peek(i+1), i);\t\r\n\t}\r\n\r\n\tvocalOutput += R.peek(n - 1) + noseR.peek(noseLength-1);\r\n\t\t\r\n}\r\n\r\nout1 = vocalOutput;\r\n",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-5",
					"maxclass" : "codebox",
					"numinlets" : 5,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 27.0, 67.0, 775.0, 566.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 38.0, 22.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 176.333333333333343, 22.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 2 ],
					"source" : [ "obj-11", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 3 ],
					"source" : [ "obj-17", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 4 ],
					"source" : [ "obj-20", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-5", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-32", 0 ],
					"source" : [ "obj-7", 0 ]
				}

			}
 ]
	}

}
